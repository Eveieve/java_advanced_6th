잠금(Lock)
트랜젝션을 격리를 위한 핵심

어플리케이션과 사용자가 상호작용하는 동안
데이터베이스에 저장된 데이터의 무결성을 보장하는 방법이다.

요청이 순차적으로 발행되고 한 번에 하나씩 순서대로 처리된다면
데이터베이스에는 트랜젝션과 잠금이 필요가 없어진다.


잘못된 읽기 (dirty reads)
한 트랜젝션이 아직 COMMIT이 실행되지 않은 다른 트랜젝션에 의해
수정된 행에서 데이터를 읽으면 발생하는 현상

반복 불가능한 읽기(non-repeatable reads)
한 트랜젝션에서 두 쿼리가 SELECT를 실행했을때 중간에 다른 트랜젝션으로
변경이 발생하여 반환된 값이 서로 다를 때 발생하는 현상
dirty reads 와의 차이점은 COMMIT이 있다

가상읽기(phantom reads)
한 트랜젝션이 실행 중이고, 읽히고 있는 레코드에 다른 트랜젝션이
행을 추가하거나 삭제할때 발생된다.
데이터의 일관성을 보장하는 범위 잠금이 없을 때 가상읽기가 발생할 수 있다.


MSSQL에서 트랜잭션의 격리 수준을 변경할 수 있다.


1. 세션(SESSION)단위 격리 수준 변경
   현재 세션에 대해서만 격리 수준을 변경한다.
   SET SESSION TRANSACTION ISOLATION 4개 가지 격리수준에서 선택;
   현재 세션에서만 적용된다.

2. 전체(Global) 격리 수준 변경
   MYSQL 서버 전체의 격리 수준을 변경한다.
   SET Global TRANSACTION ISOLATION 격리수준 지정;
   새로운 세션 부터 변경된 격리 수준이 적용된다.
   현재 활성화된 세션에는 적용이 되지 않는다.

3. 특정 트랜잭션 시작 시 격리 수준 설정할 수 있다.
   START TRANSACTION ISOLATION 격리수준 지정;

   해당 트랜젝션이 종료될 때 까지 적용


MYSQL 격리 수준 정리
- READ UNCOMMITTED  : 커밋되지 않은 데이터를 읽을 수 있음 (Dirty Read 가능)
- READ COMMITTED : 다른 트랜젝션이 커밋한 데이터만 읽을 수 있음 (Oracel , PostgreSQL , MS-SQL 기본값)
- REPEATABLE READ : 트랜젝션 내에서 동일한 데이터를 여러 번 조회해도 같은 결과 반환 (MYSQL 기본값)
- SERIALIZABLE :  가장 엄격한 수준, 트랜잭션을 직렬화하여 실행한다.

결론 : MYSQL 은 REPEATABLE READ 격리 수준을 채택함. 격리 수준은 필요에 따라 조회하고 변경하여 사용할 수 있음 